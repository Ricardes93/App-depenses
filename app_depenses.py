# -*- coding: utf-8 -*-
"""App depenses

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_xMnf8dFqq90pwA_cPdajEC3Dg_WSD6r
"""

# - Charger les modules ou packages
import pandas as pd
from dash import Dash, html, dash_table, dcc, callback, Output, Input
import plotly.express as px

# - Importer les données
df = pd.read_excel('/content/depenses.xlsx')

# - Préparer les données
df.fillna(value=0, inplace=True)
df['Année'] = df['Année'].astype(str)

# Initialize the app
app = Dash(__name__)

font_style = {
    'font-family': 'Arial, sans-serif'
}

app.layout = html.Div([
    html.Div(children='SYNTHESE DES DEPENSES'),
    html.Hr(),
    dcc.Tabs([
        dcc.Tab(label='Apperçu des Données', children=[
            dash_table.DataTable(data=df.to_dict('records'), page_size=10, style_table=font_style),
            dcc.Graph(figure={}, id='Graphique0')]),
        dcc.Tab(label='Statistiques par mois et an', children=[
            dcc.Dropdown(['Compte_1:_Actifs_',
                  'Compte_2:_Épargne_à_long_terme',
                  'Compte_3_:_Dév_perso_et_formation',
                  'Compte_4_:_Besoins_indispensables',
                  'Compte_5:_Les_loisirs_(sorties,_resto,_sport,_etc.)',
                  'Compte_6:_Les_dons',
                  'Total'],
                   value='Total', id='Filtre'),
            dcc.Graph(figure={}, id='Graphique1'),
            dcc.Graph(figure={}, id='Graphique2'),
            dcc.Graph(figure={}, id='Graphique3'),
            dcc.Graph(figure={}, id='Graphique4')
            ]),
        dcc.Tab(label='Statistiques par compte', children=[
            dcc.Graph(figure={}, id='Graphique5'),
            dcc.Graph(figure={}, id='Graphique6')
            ])
        ])
    ])

# Add controls to build the interaction
@callback(
    Output(component_id='Graphique0', component_property='figure'),
    Output(component_id='Graphique1', component_property='figure'),
    Output(component_id='Graphique2', component_property='figure'),
    Output(component_id='Graphique3', component_property='figure'),
    Output(component_id='Graphique4', component_property='figure'),
    Output(component_id='Graphique5', component_property='figure'),
    Output(component_id='Graphique6', component_property='figure'),
    Input(component_id='Filtre', component_property='value')
)
def update_graph(col_chosen):
    Graphique0 = px.line(df, x="Mois", y='Compte_1:_Actifs_',
                  category_orders={'Mois': ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet',
                                            'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']},
                  title='Evolution des dépenses par mois et pour le compte 1',
                  render_mode= 'svg',
                  color='Année',
                  markers=True)
    Graphique0.update_layout(paper_bgcolor='white', plot_bgcolor='white', title_x=0.5,
                      xaxis=dict(showline=True, zeroline=True, showgrid=True, linecolor='black',
                                 gridcolor='Black', showticklabels=True),
                      yaxis=dict(showgrid=True, zeroline=True, showline=True, gridcolor='Black',
                                 linecolor='black', showticklabels=True))
    Graphique1 = px.histogram(df, x="Mois", y=col_chosen, color='Mois', text_auto=True,
                  category_orders={'Mois': ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet',
                                            'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']},
                  title='Evolution des dépenses par mois',
                  )
    Graphique1.update_layout(paper_bgcolor='white', plot_bgcolor='white', title_x=0.5,
                      yaxis=dict(showgrid=True, zeroline=True, showline=True, gridcolor='Black',
                                 linecolor='black', zerolinecolor='Black', showticklabels=True))
    Graphique2 = px.histogram(df, x="Année", y=col_chosen, color='Année', text_auto=True,
                  title='Evolution des dépenses par année',
                  )
    Graphique2.update_layout(paper_bgcolor='white', plot_bgcolor='white', title_x=0.5,
                      yaxis=dict(showgrid=True, zeroline=True, showline=True, gridcolor='Black',
                                 linecolor='black', zerolinecolor='Black', showticklabels=True))
    Graphique3 = px.pie(df, values=col_chosen, names='Année', title='Proportion des dépenses annuelles')
    Graphique3.update_layout(title_x=0.5)
    Graphique3.update_traces(textposition='inside', textinfo='percent+label')
    Graphique4 = px.histogram(df, x="Mois", y=col_chosen, barnorm ='percent', color='Année',
                  category_orders={'Mois': ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet',
                                            'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']},
                  title='Evolution des dépenses par an en % du total par mois  ',
                  )
    Graphique4.update_layout(paper_bgcolor='white', plot_bgcolor='white', title_x=0.5,
                      yaxis=dict(showgrid=True, zeroline=True, showline=True, gridcolor='Black',
                                 linecolor='black', zerolinecolor='Black', showticklabels=True))
    Graphique5 = px.histogram(df, x="Mois", y=['Compte_1:_Actifs_',
                  'Compte_2:_Épargne_à_long_terme',
                  'Compte_3_:_Dév_perso_et_formation',
                  'Compte_4_:_Besoins_indispensables',
                  'Compte_5:_Les_loisirs_(sorties,_resto,_sport,_etc.)',
                  'Compte_6:_Les_dons',], barnorm ='percent',
                  category_orders={'Mois': ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet',
                                            'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']},
                  title='Evolution des dépenses par compte en % du total par mois  ',
                  )
    Graphique5.update_layout(paper_bgcolor='white', plot_bgcolor='white', title_x=0.5,
                      yaxis=dict(showgrid=True, zeroline=True, showline=True, gridcolor='Black',
                                 linecolor='black', zerolinecolor='Black', showticklabels=True))
    Graphique6 = px.histogram(df, x="Année", y=['Compte_1:_Actifs_',
                  'Compte_2:_Épargne_à_long_terme',
                  'Compte_3_:_Dév_perso_et_formation',
                  'Compte_4_:_Besoins_indispensables',
                  'Compte_5:_Les_loisirs_(sorties,_resto,_sport,_etc.)',
                  'Compte_6:_Les_dons',], barnorm ='percent',
                   title='Evolution des dépenses par compte en % du total par an  ',
                  )
    Graphique6.update_layout(paper_bgcolor='white', plot_bgcolor='white', title_x=0.5,
                      yaxis=dict(showgrid=True, zeroline=True, showline=True, gridcolor='Black',
                                 linecolor='black', zerolinecolor='Black', showticklabels=True))

    return Graphique0, Graphique1, Graphique2, Graphique3, Graphique4, Graphique5, Graphique6

# Run the app
if __name__ == '__main__':
    app.run(debug=True)